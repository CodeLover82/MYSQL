< 기본 검색 >
SELECT [ALL | DISTINCT] 속성1 [AS X], 속성2 [AS Y],.. 
FROM 테이블1;

* : 모든 속성의 의미로 속성1, 2.. 대신에 *를 사용할 수 있다.
ALL : 튜플 중복 허용.(디폴트)
DISTINCT : 튜플 중복 제거.
AS : 별칭 부여. 속성의 이름을 다른 이름으로 바꾸어 출력한다.

< 산술식을 이용한 검색 >
EX) 
SELECT 제품명, 단가 + 500 
FROM 제품;



















< 로컬 변수의 사용 >
:=  : 대입연산자

EX)
SET @HOUR := -1;

SELECT (@HOUR := @HOUR + 1) AS 'HOUR', (SELECT COUNT(*) FROM ANIMAL_OUTS WHERE @HOUR = HOUR(DATETIME)) AS 'COUNT'
FROM ANIMAL_OUTS
WHERE @HOUR < 23;

< LEFT JOIN >
일반적인 조인은 A.ID = B.ID 했을 때 이 등식이 성립하는 튜플만 나온다면, LEFT JOIN은 A의 모든 튜플이 다 표현된다. 대신 등식이 성립하지 않는 경우에는 B의 속성들에는 NULL 값이 들어간다.
EX)
SELECT ANIMAL_INS.NAME, ANIMAL_INS.DATETIME
FROM ANIMAL_INS LEFT JOIN ANIMAL_OUTS ON ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID
WHERE ANIMAL_OUTS.ANIMAL_ID IS NULL
ORDER BY ANIMAL_INS.DATETIME ASC
LIMIT 3;


